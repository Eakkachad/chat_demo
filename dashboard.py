import streamlit as st
from user_manager import UserManager
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import rcParams
import os
import json

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢
def setup_fonts():
    try:
        rcParams['font.family'] = 'Sarabun'
        rcParams['font.size'] = 12
    except:
        rcParams['font.family'] = 'Tahoma'

def main():
    setup_fonts()
    st.set_page_config(
        page_title="‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ",
        layout="wide",
        initial_sidebar_state="expanded"
    )
    
    st.title("üìä ‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó")
    st.markdown("---")
    
    user_manager = UserManager()
    
    # ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    st.header("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ")
    user_files = user_manager.get_all_user_files()
    col1, col2 = st.columns(2)
    col1.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", len(user_files))
    
    # ‡∏™‡πà‡∏ß‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à
    st.header("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°")
    interests = {}
    for file in user_files:
        with open(os.path.join(user_manager.data_dir, file), 'r', encoding='utf-8') as f:
            data = json.load(f)
            for interest in data.get('interests', []):
                interests[interest] = interests.get(interest, 0) + 1
    
    if interests:
        df_interests = pd.DataFrame.from_dict(interests, orient='index', columns=['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']).sort_values('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', ascending=False)
        st.bar_chart(df_interests.head(10))
    else:
        st.warning("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
    
    # ‡∏™‡πà‡∏ß‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î
    st.header("‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î")
    styles = {}
    for file in user_files:
        with open(os.path.join(user_manager.data_dir, file), 'r', encoding='utf-8') as f:
            data = json.load(f)
            for style in data.get('styles', []):
                styles[style] = styles.get(style, 0) + 1
    
    if styles:
        df_styles = pd.DataFrame.from_dict(styles, orient='index', columns=['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']).sort_values('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', ascending=False)
        st.dataframe(df_styles)
    else:
        st.warning("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î")
    
    # ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    st.header("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á")
    if user_files:
        selected_file = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", user_files[:10])
        with open(os.path.join(user_manager.data_dir, selected_file), 'r', encoding='utf-8') as f:
            user_data = json.load(f)
            st.json(user_data)
    else:
        st.warning("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")

if __name__ == "__main__":
    main()